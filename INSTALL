INSTALL RAVEL
-------------

See http://debussy-net.org/download for pre-packaged VMs.


INSTALL FROM SOURCE
-------------------
To install Debussy from source, first check out a copy of the repository:

    git clone http://github.com/debussy-net/debussy

Run the Debussy install script:

    cd debussy
    util/install.sh [options]

Options for `install.sh` are:
    * -a: install all required packages (Mininet, Pox, and PostgreSQL)
    * -m: install only Mininet and Pox (i.e., Mininet install with `-kmnvp`)
    * -p: install only PostgreSQL
    * -r: install Python libraries required by Debussy, configure PostgreSQL
          account and extensions


CONFIGURE POSTGRESQL
--------------------
By default, PostgreSQL uses peer authentication, in which the client's username
authenticates a connection to the database.  Debussy requires either trust (any
user can connect) ormd5 (password-based) authentication.

To set modify the authentication method, edit:

    /etc/postgresql/9.3/main/pg_hba.conf

Set the last field on the following lines to trust or md5:

    local    all   postgres	    trust
    local    all   all		    trust

Alternatively, when running `install.sh` with `-a` or `-r`, you will be prompted
to make this change automatically.


OPTIONAL: CONFIGURE OVS-OFCTL
-----------------------------
Debussy supports multiple protocols for database triggers to interact with
OpenFlow switches.  This allows changes in the database to be propagated to the
network.  Supported protocols, which can be configured in debussy.cfg, are:
    * message queues (the default protocol)
    * RPC
    * ovs-ofctl

If using the `ovs-ofctl` command, you must set sudo to execute without
prompting for a password so database triggers can invoke the commands with
sudo.  First, add postgres to sudoers:

    sudo adduser postgres sudo

Edit /etc/sudoers (e.g., using "sudo visudo") and set the user specification to:

    ALL ALL=(ALL) NOPASSWD:ALL

